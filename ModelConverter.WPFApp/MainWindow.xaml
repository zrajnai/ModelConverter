<Window x:Class="ModelConverter.WPFApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfApp="clr-namespace:ModelConverter.WPFApp"
        xmlns:converters="clr-namespace:ModelConverter.WPFApp.Converters"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        WindowStyle="SingleBorderWindow"
        d:DataContext="{d:DesignInstance wpfApp:MainViewModel}"
        
        Title="Model Converter" SizeToContent="Height" Width="500">
    <Window.Resources>
        <!-- One style for each *type* of control on the window -->
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,0"/>
            <Setter Property="Margin" Value="5,5" />
            <Setter Property="Height" Value="25" />
        </Style>
        <Style TargetType="Label">
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="xctk:DoubleUpDown">
            <Setter Property="Height" Value="25" />
            <Setter Property="Margin" Value="5,5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="25" />
            <Setter Property="Margin" Value="5,5" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Height" Value="25" />
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>


        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <StatusBar DockPanel.Dock="Bottom" Height="25" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem  HorizontalContentAlignment="Stretch" Visibility="{Binding Converting, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <ProgressBar Value="{Binding ProgressValue}" Height="10" Margin="0,0,20,0"/>
            </StatusBarItem>
            <StatusBarItem HorizontalContentAlignment="Stretch" Visibility="{Binding HasStatus, Converter={StaticResource BooleanToVisibilityConverter}}" >
                <TextBlock Text="{Binding StatusMessage}"/>
            </StatusBarItem>
        </StatusBar>

        <DockPanel Margin="3">
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding ConvertCommand}" Visibility="{Binding Converting, Converter={StaticResource InverseBooleanToVisibilityConverter}}">Convert</Button>
                <Button Command="{Binding CancelCommand}" Visibility="{Binding Converting, Converter={StaticResource BooleanToVisibilityConverter}}">Cancel</Button>
                <Button Command="{Binding ExitCommand}">Exit</Button>
            </StackPanel>

            <StackPanel IsEnabled="{Binding Converting, Converter={StaticResource InverseBooleanConverter}}"
                        Grid.IsSharedSizeScope="True">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Buttons" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="Input file:" />
                    <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding InputFilePath, Mode=TwoWay}" />
                    <Button Grid.Column="2" Grid.Row="0" Command="{Binding BrowseInputFileCommand}" Content="Browse File..."/>

                    <Label Grid.Column="0" Grid.Row="1" Content="Output format" />
                    <ComboBox Grid.Column="1" Grid.Row="1"
                              ItemsSource="{Binding OutputFormats}"
                              SelectedItem="{Binding SelectedOutputFormat}">
                    </ComboBox>

                    <Label Grid.Column="0" Grid.Row="2" Content="Output file:" />
                    <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding OutputFilePath, Mode=TwoWay}"/>
                    <Button Grid.Column="2" Grid.Row="2" Command="{Binding BrowseOutputFileCommand}" Content="Browse Folder..."/>

                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                        <ColumnDefinition Width="100" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Label  Grid.Column="0" Grid.Row="0" Content="Area:"/>
                    <TextBox Grid.Column="1" Grid.Row="0" IsReadOnly="True" Text="{Binding Area}"/>
                    <Label Grid.Column="0" Grid.Row="1" Content="Volume:"/>
                    <TextBox Grid.Column="1" Grid.Row="1" IsReadOnly="True" Text="{Binding Volume}" />

                </Grid>
                <Expander Margin="5,0" Header="Transformation" IsExpanded="False" DataContext="{Binding Transformation}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="Labels" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="auto" SharedSizeGroup="Buttons" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="Scale:" />
                        <xctk:DoubleUpDown Grid.Column="1" Grid.Row="0" Value="{Binding ScaleX}" />
                        <xctk:DoubleUpDown Grid.Column="2" Grid.Row="0" Value="{Binding ScaleY}" />
                        <xctk:DoubleUpDown Grid.Column="3" Grid.Row="0" Value="{Binding ScaleZ}" />
                        <Label Grid.Column="0" Grid.Row="1" Content="Rotation:" />
                        <xctk:DoubleUpDown Grid.Column="1" Grid.Row="1" Value="{Binding RotationX}" />
                        <xctk:DoubleUpDown Grid.Column="2" Grid.Row="1" Value="{Binding RotationY}" />
                        <xctk:DoubleUpDown Grid.Column="3" Grid.Row="1" Value="{Binding RotationZ}" />
                        <Label Grid.Column="0" Grid.Row="2" Content="Translation:" />
                        <xctk:DoubleUpDown Grid.Column="1" Grid.Row="2" Value="{Binding TranslationX}" />
                        <xctk:DoubleUpDown Grid.Column="2" Grid.Row="2" Value="{Binding TranslationY}" />
                        <xctk:DoubleUpDown Grid.Column="3" Grid.Row="2" Value="{Binding TranslationZ}" />

                    </Grid>
                </Expander>
            </StackPanel>

        </DockPanel>
    </DockPanel>
</Window>
